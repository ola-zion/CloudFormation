AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template deploys a Launch Configuration, Load balancer.
Parameters:
  WebSecurityGrp:
    Type: List<AWS::EC2::SecurityGroup::Id>
  AppSecurityGrp:
    Type: List<AWS::EC2::SecurityGroup::Id>
  WebLoadBalancerSecurityGrp:
    Type: List<AWS::EC2::SecurityGroup::Id>
  AppLoadBalancerSecurityGrp:
    Type: List<AWS::EC2::SecurityGroup::Id>
  PublicSubnet:
    Type: List<AWS::EC2::Subnet::Id>
  PrivateSubnet:
    Type: List<AWS::EC2::Subnet::Id>
  ImageId:
    Type: AWS::EC2::Image::Id
    Default: ami-0b898040803850657
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
Resources:
  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      LoadBalancerName: WebLoadBalancer
      Listeners:
        - InstancePort: 80
          InstanceProtocol: HTTP
          LoadBalancerPort: 80
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/index.html
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      Scheme: internet-facing
      SecurityGroups: !Ref 'WebLoadBalancerSecurityGrp'
      Subnets: !Ref 'PublicSubnet'
  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      LoadBalancerName: AppLoadBalancer
      Listeners:
        - InstancePort: 80
          InstanceProtocol: HTTP
          LoadBalancerPort: 80
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/index.html
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      Scheme: internal
      SecurityGroups: !Ref 'AppLoadBalancerSecurityGrp'
      Subnets: !Ref 'PrivateSubnet'
  WebLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'ImageId'
      AssociatePublicIpAddress: true
      InstanceType: t2.micro
      SecurityGroups: !Ref 'WebSecurityGrp'
      UserData: !Base64 "#!/bin/bash\nsudo yum update -y\nsudo yum install httpd -y\n\
        sudo systemctl start httpd\nsudo systemctl enable httpd\necho \"<h1>Hello\
        \ world</h1>\" > /var/www/html/index.html\n"
  WebASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref 'WebLaunchConfiguration'
      LoadBalancerNames:
        - !Ref 'WebLoadBalancer'
      MaxSize: 2
      MinSize: 1
      VPCZoneIdentifier: !Ref 'PublicSubnet'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
  CPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref 'AppASG'
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50
  AppLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'ImageId'
      AssociatePublicIpAddress: false
      InstanceType: t2.micro
      SecurityGroups: !Ref 'AppSecurityGrp'
  AppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref 'AppLaunchConfiguration'
      LoadBalancerNames:
        - !Ref 'AppLoadBalancer'
      MaxSize: 2
      MinSize: 1
      VPCZoneIdentifier: !Ref 'PrivateSubnet'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
